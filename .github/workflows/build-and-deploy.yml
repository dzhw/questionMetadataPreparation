name: Build and Deploy
on:
  push:
    branches:
      - master
    tags-ignore:
      - v*
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup R
      uses: r-lib/actions/setup-r@v1
      with:
        r-version: '3.5.1'
    - name: Setup pandoc
      uses: r-lib/actions/setup-pandoc@v1
    - name: Setup Tex
      uses: r-lib/actions/setup-tinytex@v1
    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}
    - name: Cache R packages
      uses: actions/cache@v2
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
    - name: Install apt dependencies
      run: sudo apt-get -y install libcurl4-openssl-dev libssl-dev libharfbuzz-dev libfribidi-dev
    - name: Install dependencies
      run: |
        remotes::install_deps(dependencies = TRUE)
      shell: Rscript {0}
    - name: Build the package
      run: R CMD build .
    - name: Run package checks
      run: R CMD check *tar.gz
    - name: Report Code Coverage
      run: Rscript -e 'covr::codecov()'
    - name: Render Readme
      run: Rscript -e 'rmarkdown::render("README.Rmd")'
    - name: Build Github page
      run: Rscript -e 'pkgdown::build_site()'
    - name: Deploy to Github Pages
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: docs # The folder the action should deploy.
        CLEAN: true # Automatically remove deleted files from the deploy branch
    - name: Report build status via Slack
      uses: act10ns/slack@v1
      if: always()
      with:
        status: ${{ job.status }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
